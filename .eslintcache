[{"C:\\Users\\lijas\\proj\\src\\index.js":"1","C:\\Users\\lijas\\proj\\src\\App.js":"2","C:\\Users\\lijas\\proj\\src\\components\\Map.js":"3","C:\\Users\\lijas\\proj\\src\\components\\Search.js":"4","C:\\Users\\lijas\\proj\\src\\components\\CardTitle.js":"5","C:\\Users\\lijas\\proj\\src\\components\\GlobalStats.js":"6","C:\\Users\\lijas\\proj\\src\\components\\Buttons.js":"7","C:\\Users\\lijas\\proj\\src\\components\\MapColor.js":"8","C:\\Users\\lijas\\proj\\src\\components\\MapCircles.js":"9","C:\\Users\\lijas\\proj\\src\\components\\CountryCard.js":"10","C:\\Users\\lijas\\proj\\src\\components\\Chart.js":"11"},{"size":447,"mtime":1612639975275,"results":"12","hashOfConfig":"13"},{"size":4652,"mtime":1613353384684,"results":"14","hashOfConfig":"13"},{"size":2298,"mtime":1612916464326,"results":"15","hashOfConfig":"13"},{"size":1401,"mtime":1613358543555,"results":"16","hashOfConfig":"13"},{"size":1355,"mtime":1612803595666,"results":"17","hashOfConfig":"13"},{"size":1681,"mtime":1612913325832,"results":"18","hashOfConfig":"13"},{"size":2573,"mtime":1612926434139,"results":"19","hashOfConfig":"13"},{"size":3561,"mtime":1612905614869,"results":"20","hashOfConfig":"13"},{"size":1192,"mtime":1612827255870,"results":"21","hashOfConfig":"13"},{"size":2517,"mtime":1612915751734,"results":"22","hashOfConfig":"13"},{"size":4105,"mtime":1613358193280,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"128f768",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\lijas\\proj\\src\\index.js",[],["49","50"],"C:\\Users\\lijas\\proj\\src\\App.js",["51","52"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Buttons from './components/Buttons';\r\nimport CardTitle from './components/CardTitle';\r\nimport CountryCard from './components/CountryCard';\r\nimport GlobalStats from './components/GlobalStats';\r\nimport Map from './components/Map';\r\nimport Dropdown from './components/Search';\r\nimport Chart from './components/Chart';\r\n\r\nconst App = () => {\r\n\r\n    const [results, setResults] = useState([]);\r\n    const [countryResults, setCountryResults] = useState([]);\r\n    const [activeIndex, setActiveIndex] = useState('globalCases');\r\n    const [activeButton, setActiveButton] = useState('cases');\r\n    const [zoom, setZoom] = useState(2);\r\n    const [center, setCenter] = useState([42,8]);\r\n    const [activeCountry, setActiveCountry] = useState(null);\r\n    const [hoveredCountry, setHoveredCountry] = useState(null);\r\n    const [chartCountry, setChartCountry] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        \r\n        const searchInfo = async () => {\r\n            const {data} = await axios.get('https://disease.sh/v3/covid-19/all');\r\n            setResults({\r\n                globalCases: data.cases,\r\n                globalDeaths: data.deaths\r\n            });\r\n        }\r\n\r\n        const searchCountry = async () => {\r\n            const {data} = await axios.get('https://disease.sh/v3/covid-19/countries');\r\n            const countries = data.map((country) => ({\r\n                name: country.country,\r\n                info: country.countryInfo,\r\n                results: {\r\n                    totalCases: country.cases,\r\n                    cases: country.casesPerOneMillion / 10,\r\n                    totalDeaths: country.deaths,\r\n                    deaths: country.deathsPerOneMillion / 10\r\n                }\r\n            }));\r\n\r\n            setCountryResults(countries);\r\n        }\r\n        \r\n        searchInfo();\r\n        searchCountry();\r\n\r\n    }, []);\r\n\r\n    const useStyles = makeStyles({\r\n        container: {\r\n            display: 'flex'\r\n        },\r\n        item: {\r\n            flexBasis: '44vw',\r\n            margin: 10\r\n        },\r\n        stats: {\r\n            position: 'absolute',\r\n            bottom: 0,\r\n            left: 8,\r\n            zIndex: 2000\r\n        },\r\n        buttons: {\r\n            justifyContent: 'center',\r\n            margin: 50\r\n        },\r\n        country: {\r\n            position: 'absolute',\r\n            width: '11.2vw',\r\n            bottom: '6vw',\r\n            left: 8,\r\n            zIndex: 1000\r\n        },\r\n        chart: {\r\n            justifyContent: 'center',\r\n            height: '52vh',\r\n            paddingRight: 14,\r\n            paddingLeft: 10,\r\n            paddingTop: 5,\r\n        }\r\n\r\n    });\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n\r\n        <div className={classes.container}>\r\n            <div>\r\n                <Map \r\n                    zoom={zoom} \r\n                    center={center} \r\n                    activeButton={activeButton}\r\n                    countryResults={countryResults}\r\n                    activeCountry={activeCountry}\r\n                    setHoveredCountry={setHoveredCountry}\r\n                    setActiveCountry={setActiveCountry}\r\n                />\r\n                <div className={classes.stats}>\r\n                    <GlobalStats \r\n                        results={results} \r\n                        activeIndex={activeIndex}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={classes.country}>\r\n            <CountryCard\r\n                activeButton={activeButton}\r\n                hoveredCountry={hoveredCountry}\r\n            />\r\n            </div>\r\n            <div className={classes.item}>\r\n                <CardTitle/>\r\n                <Buttons \r\n                    activeButton={activeButton} \r\n                    onIndexChange={setActiveIndex} \r\n                    onButtonChange={setActiveButton}\r\n                    setHoveredCountry={setHoveredCountry}\r\n                />\r\n                <Dropdown \r\n                    countryResults={countryResults}\r\n                    onCountrySubmit={setActiveCountry}\r\n                    setChartCountry={setChartCountry}\r\n                />\r\n                <div className={classes.chart}>\r\n                    <Chart\r\n                        chartCountry={chartCountry}\r\n                        dataIndex={activeButton} \r\n                        countryResults={countryResults}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default App; \r\n","C:\\Users\\lijas\\proj\\src\\components\\Map.js",[],"C:\\Users\\lijas\\proj\\src\\components\\Search.js",[],"C:\\Users\\lijas\\proj\\src\\components\\CardTitle.js",[],"C:\\Users\\lijas\\proj\\src\\components\\GlobalStats.js",[],"C:\\Users\\lijas\\proj\\src\\components\\Buttons.js",[],"C:\\Users\\lijas\\proj\\src\\components\\MapColor.js",[],"C:\\Users\\lijas\\proj\\src\\components\\MapCircles.js",[],"C:\\Users\\lijas\\proj\\src\\components\\CountryCard.js",[],"C:\\Users\\lijas\\proj\\src\\components\\Chart.js",["53"],"import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst Chart = ({ countryResults, chartCountry, dataIndex }) => {\r\n\r\n    const [results, setResults] = useState([]);\r\n\r\n    const countryLabel = countryResults.map(country => (country.name));\r\n\r\n    if (dataIndex === 'totalCases') {\r\n        dataIndex = 'cases';\r\n    } else if (dataIndex === 'totalDeaths') {\r\n        dataIndex = 'deaths';\r\n    }\r\n    \r\n    const options = {\r\n        legend: {\r\n            display: false\r\n        },\r\n        elements:{\r\n            point: {\r\n                radius: 0.5\r\n            }\r\n        },\r\n        maintainAspectRatio: false,\r\n        aspectRatio: 1,\r\n        scales: {\r\n            xAxes: [\r\n                {\r\n                    type: 'time',\r\n                    title: {\r\n                        format: 'MM/DD/YY',\r\n                    },\r\n                    gridLines: {\r\n                        display: false,\r\n                    }\r\n                }\r\n            ],\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        min: 0,\r\n                        userCallback: function(value, index, values) {\r\n                            value = value.toString();\r\n                            value = value.split(/(?=(?:...)*$)/);\r\n                            value = value.join(',');\r\n                            return value;\r\n                        }       \r\n                    },\r\n                    gridLines: {\r\n                        display: false,\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: `Historical daily new ${dataIndex} in ${chartCountry}`\r\n        },\r\n\r\n        tooltips: {\r\n            callbacks: {\r\n                label: function(tooltipItem, data) {\r\n                    var value = data.datasets[0].data[tooltipItem.index].y;\r\n                    console.log(value);\r\n                    value = value.toString();\r\n                    value = value.split(/(?=(?:...)*$)/);\r\n                    value = value.join(',');\r\n                    return value;\r\n                }\r\n            } \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (countryLabel.includes(chartCountry) === true) {\r\n\r\n            const searchInfo = async () => {\r\n                try {\r\n                    const {data} = await axios.get(`https://disease.sh/v3/covid-19/historical/${chartCountry}?lastdays=500`);\r\n                    let chartData = [];\r\n                    let prevDataPoint;\r\n                    for (let date in data.timeline[dataIndex]) {\r\n                        if (prevDataPoint) {\r\n                            let newDataPoint = {\r\n                                x: date,\r\n                                y: `${data.timeline[dataIndex][date] - prevDataPoint}`\r\n                            };\r\n                            chartData.push(newDataPoint);\r\n                        }\r\n                        prevDataPoint = data.timeline[dataIndex][date];\r\n                    }\r\n                    setResults(chartData);\r\n                }\r\n                catch(err) {\r\n                    console.log(err);\r\n                    setResults(null);\r\n                }\r\n            }\r\n            if (chartCountry) {\r\n                searchInfo(chartCountry);\r\n            }\r\n        } else {\r\n            setResults(null);\r\n        }\r\n\r\n    }, [chartCountry, dataIndex]);\r\n\r\n\r\n    if (results !== null && chartCountry !== null) {\r\n        return (\r\n            <Line\r\n                data={{\r\n                    datasets: [\r\n                        {\r\n                            backgroundColor: 'rgba(111, 159, 191, 0.8)',\r\n                            borderColor: '#135BA1',\r\n                            borderWidth: 0.75,\r\n                            data: results,\r\n                        }\r\n                    ]\r\n                }}\r\n                options={options}\r\n            /> \r\n        )\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Chart;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":18,"column":18,"nodeType":"60","messageId":"61","endLine":18,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":19,"column":20,"nodeType":"60","messageId":"61","endLine":19,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":109,"column":8,"nodeType":"65","endLine":109,"endColumn":33,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'setZoom' is assigned a value but never used.","Identifier","unusedVar","'setCenter' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countryLabel'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [chartCountry, countryLabel, dataIndex]",{"range":"72","text":"73"},[3475,3500],"[chartCountry, countryLabel, dataIndex]"]